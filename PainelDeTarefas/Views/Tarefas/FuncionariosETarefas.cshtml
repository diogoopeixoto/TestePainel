

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>PAinel de Tarefas</title>
    <!-- Inclua os estilos do Bootstrap -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-4">
        <h1>Painel</h1>

        <!-- Cabeçalho da tabela -->
        <table class="table">
           
          
            <div class="container mt-4">
              
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>Funcionário</th>
                            <th>Tarefas</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var funcionario in Model)
                        {
                            <tr>
                                <td>@funcionario.Nome</td>
                                <td>
                                    <div class="row">
                                        @foreach (var tarefa in funcionario.TarefasAtribuidas)
                                        {
                                            @*<div class="col-md-3 mb-4">
                                                <div class="card">
                                                    <div class="card-body">
                                                        <h5 class="card-title">@tarefa.Descricao</h5>
                                                        <p class="card-text">Alguma descrição da tarefa.</p>
                                                         <div class="cronometro" data-tarefa-id="@tarefa.Id">Tempo Execução: 00:00:00</div>
                                                        <button type="button" class="btn btn-primary btn-start" data-tarefa-id="@tarefa.Id">Start</button>
                                                        <button type="button" class="btn btn-secondary btn-pause" data-tarefa-id="@tarefa.Id">Pause</button>
                                                        <span class="tempo-estimado">@tarefa.TempoDecorrido</span>
                                                    </div>
                                                </div>
                                            </div>*@
                                            <div class="col-md-3 mb-4">
                                                <div class="card ">


                                                    <div class="card-body">                                                  
                                                        <h5 class="card-title">@tarefa.Descricao</h5>
                                                        <p class="card-text">Alguma descrição da tarefa.</p>
                                                       
                                                        <div class="cronometro" data-tarefa-id="@tarefa.Id">Tempo Execução: 00:00:00</div>
                                                        


                                                        <button type="button" class="btn btn-primary btn-start" data-tarefa-id="@tarefa.Id">Start</button>
                                                        <button type="button" class="btn btn-secondary btn-pause" data-tarefa-id="@tarefa.Id">Pause</button>
                                                        <span class="tempo-estimado">@tarefa.TempoDecorrido</span>
                                                    </div>
                                                </div>
                                            </div>
                                                                                       
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>


    </div>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Seleciona todos os botões "Start" com a classe "btn-start"
            const btnStarts = document.querySelectorAll(".btn-start");

            // Seleciona todos os botões "Pause" com a classe "btn-pause"
            const btnPauses = document.querySelectorAll(".btn-pause");

            // Armazena os intervalIds para rastrear os cronômetros em execução
            const intervalIds = {};

            // Armazena os tempos decorridos para cada tarefa
            const temposDecorridos = {};

            function atualizarCronometro(tarefaId, cronometroElement) {
                let segundos = temposDecorridos[tarefaId] || 0;

                const intervalId = setInterval(() => {
                    segundos++;
                    temposDecorridos[tarefaId] = segundos; // Atualiza o tempo decorrido

                    const horas = Math.floor(segundos / 3600);
                    const minutos = Math.floor((segundos % 3600) / 60);
                    const seg = segundos % 60;
                    cronometroElement.innerText = `Tempo decorrido: ${horas}:${minutos}:${seg}`;

                    // Atualiza o valor de TempoExecucao no campo de dados
                    const tempoExecucaoElement = document.querySelector(`.tempo-execucao[data-tarefa-id="${tarefaId}"]`);
                    if (tempoExecucaoElement) {
                        tempoExecucaoElement.innerText = `${horas}:${minutos}:${seg}`;
                    }
                }, 1000);

                // Armazena o intervalId no objeto intervalIds
                intervalIds[tarefaId] = intervalId;
            }

            // Função para atualizar o cronômetro
            //function atualizarCronometro(tarefaId, cronometroElement) {
            //    let segundos = temposDecorridos[tarefaId] || 0;

            //    const intervalId = setInterval(() => {
            //        segundos++;
            //        temposDecorridos[tarefaId] = segundos; // Atualiza o tempo decorrido
            //        const horas = Math.floor(segundos / 3600);
            //        const minutos = Math.floor((segundos % 3600) / 60);
            //        const seg = segundos % 60;
            //        cronometroElement.innerText = `Tempo decorrido: ${horas}:${minutos}:${seg}`;
            //    }, 1000);

            //    // Armazena o intervalId no objeto intervalIds
            //    intervalIds[tarefaId] = intervalId;
            //}

            // Função para pausar o cronômetro
            function pausarCronometro(tarefaId) {
                const intervalId = intervalIds[tarefaId];
                if (intervalId) {
                    clearInterval(intervalId);
                }
            }

            function atualizarEstiloCard(tarefaId) {
                const cardElement = document.querySelector(`.card[data-tarefa-id="${tarefaId}"]`);
                if (cardElement) {
                    const tempoDecorrido = temposDecorridos[tarefaId] || 0;
                    const tempoEstimado = parseFloat(cardElement.querySelector(".tempo-estimado").innerText);

                    if (tempoDecorrido > tempoEstimado) {
                        cardElement.classList.add("card-danger");
                    } else {
                        cardElement.classList.remove("card-danger");
                    }
                }
            }

            // Adiciona um evento de clique a cada botão "Start"
            btnStarts.forEach(function (btnStart) {
                btnStart.addEventListener("click", function () {
                    const tarefaId = btnStart.getAttribute("data-tarefa-id");
                    const cronometroElement = document.querySelector(`.cronometro[data-tarefa-id="${tarefaId}"]`);
                    atualizarCronometro(tarefaId, cronometroElement);
                });
            });

            // Adiciona um evento de clique a cada botão "Pause"
            btnPauses.forEach(function (btnPause) {
                btnPause.addEventListener("click", function () {
                    const tarefaId = btnPause.getAttribute("data-tarefa-id");
                    pausarCronometro(tarefaId);
                });
            });
        });

       
    </script>
    <style>
        .card-danger {
            background-color: red;
            /* Outros estilos de formatação para card vermelho */
        }

    </style>

    <!-- Inclua os scripts do Bootstrap e jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap/dist/js/bootstrap.min.js"></script>
</body>
</html>
